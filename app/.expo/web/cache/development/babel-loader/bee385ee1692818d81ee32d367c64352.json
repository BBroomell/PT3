{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/Users/SBS31/OneDrive/Desktop/PT3/PT3/app/screens/signUpScreen.js\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { CheckBox } from \"react-native-elements\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { styles } from \"../styles/styles.js\";\nimport FancyButton from \"../components/fancyButton.js\";\nimport Hasher from \"./helpers/Hasher.js\";\nexport var SignUpScreen = function SignUpScreen(_ref) {\n  var navigation = _ref.navigation;\n  var baseURL = \"https://large-project-2020.herokuapp.com\";\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userUserName = _useState4[0],\n      setUserUserName = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userEmail = _useState6[0],\n      setUserEmail = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      userPassword = _useState8[0],\n      setUserPassword = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      userConfirmPassword = _useState10[0],\n      setUserConfirmPassword = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      loading = _useState12[0],\n      setLoading = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      errortext = _useState14[0],\n      setErrortext = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      isRegistraionSuccess = _useState16[0],\n      setIsRegistraionSuccess = _useState16[1];\n\n  var handleSubmitButton = function handleSubmitButton() {\n    setErrortext(\"\");\n\n    if (!userName) {\n      alert(\"Full Name can't be blank\");\n      return;\n    }\n\n    if (!userEmail) {\n      alert(\"Email can't be blank\");\n      return;\n    }\n\n    if (!userUserName) {\n      alert(\"Username can't be blank\");\n      return;\n    }\n\n    if (!userPassword) {\n      alert(\"Password can't be blank\");\n      return;\n    }\n\n    if (userPassword != userConfirmPassword) {\n      alert(\"Passwords do not match\");\n      return;\n    }\n\n    setLoading(true);\n    var jsContents = '{\"username\":\"' + userUserName + '\",\"password\":\"' + Hasher(userPassword) + '\",\"name\":\"' + userName + '\",\"email\":\"' + userEmail + '\"}';\n    fetch(baseURL + \"/users/addUser\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: jsContents\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJSON) {\n      setLoading(false);\n      console.log(responseJSON);\n\n      if (responseJSON == \"User added!\") {\n        setIsRegistraionSuccess(true);\n        console.log(\"Registration Successful. Please Login to proceed\");\n        alert(\"Success!\");\n        return navigation.navigate(\"Login\");\n      } else {\n        setErrortext(\"Registration Unsuccessful\");\n      }\n    }).catch(function (error) {\n      setLoading(false);\n      console.error(error);\n      console.log(\"Failure :(\");\n    });\n\n    if (isRegistraionSuccess) {\n      console.log(\"It was a success bitches!!\");\n    }\n  };\n\n  return React.createElement(LinearGradient, {\n    colors: [\"#4E576A\", \"#211D1D\", \"black\"],\n    style: styles.screen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, React.createElement(LinearGradient, {\n    colors: [\"#20E9A9\", \"#5762D5\"],\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      height: 90,\n      paddingLeft: 100,\n      paddingTop: 35,\n      fontSize: 40,\n      fontWeight: \"bold\",\n      color: \"#43373F\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"Sign Up\"), React.createElement(View, {\n    style: styles.signUpContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputTextBox,\n    placeholder: \"  Full Name\",\n    onChangeText: function onChangeText(UserName) {\n      return setUserName(UserName);\n    },\n    placeholderTextColor: \"#504747\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: styles.inputTextBox,\n    placeholder: \"  Email Address\",\n    onChangeText: function onChangeText(UserEmail) {\n      return setUserEmail(UserEmail);\n    },\n    placeholderTextColor: \"#504747\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: styles.inputTextBox,\n    placeholder: \"  Username\",\n    onChangeText: function onChangeText(UserUserName) {\n      return setUserUserName(UserUserName);\n    },\n    placeholderTextColor: \"#504747\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: styles.inputTextBox,\n    placeholder: \"  Password\",\n    onChangeText: function onChangeText(UserPassword) {\n      return setUserPassword(UserPassword);\n    },\n    secureTextEntry: true,\n    placeholderTextColor: \"#504747\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: styles.inputTextBox,\n    placeholder: \"  Re-Type Password\",\n    onChangeText: function onChangeText(UserConfirmPassword) {\n      return setUserConfirmPassword(UserConfirmPassword);\n    },\n    secureTextEntry: true,\n    placeholderTextColor: \"#504747\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }), React.createElement(CheckBox, {\n    title: \"Click to accept Terms & Conditions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }), React.createElement(FancyButton, {\n    text: \"Create\",\n    onPress: handleSubmitButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }), React.createElement(FancyButton, {\n    text: \"Back to Login\",\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }))));\n};","map":{"version":3,"sources":["/mnt/c/Users/SBS31/OneDrive/Desktop/PT3/PT3/app/screens/signUpScreen.js"],"names":["React","useState","CheckBox","LinearGradient","styles","FancyButton","Hasher","SignUpScreen","navigation","baseURL","userName","setUserName","userUserName","setUserUserName","userEmail","setUserEmail","userPassword","setUserPassword","userConfirmPassword","setUserConfirmPassword","loading","setLoading","errortext","setErrortext","isRegistraionSuccess","setIsRegistraionSuccess","handleSubmitButton","alert","jsContents","fetch","method","headers","body","then","response","json","responseJSON","console","log","navigate","catch","error","screen","container","height","paddingLeft","paddingTop","fontSize","fontWeight","color","signUpContainer","inputTextBox","UserName","UserEmail","UserUserName","UserPassword","UserConfirmPassword","goBack"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Text, View, TextInput, Button, Image } from \"react-native\";\nimport { CheckBox } from \"react-native-elements\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\nimport { styles } from \"../styles/styles.js\";\n\nimport FancyButton from \"../components/fancyButton.js\";\n\nimport Hasher from \"./helpers/Hasher.js\";\n\nexport const SignUpScreen = ({ navigation }) => {\n  const baseURL = \"https://large-project-2020.herokuapp.com\";\n\n  let [userName, setUserName] = useState(\"\");\n  let [userUserName, setUserUserName] = useState(\"\");\n  let [userEmail, setUserEmail] = useState(\"\");\n  let [userPassword, setUserPassword] = useState(\"\");\n  let [userConfirmPassword, setUserConfirmPassword] = useState(\"\");\n  let [loading, setLoading] = useState(false);\n  let [errortext, setErrortext] = useState(\"\");\n  let [isRegistraionSuccess, setIsRegistraionSuccess] = useState(false);\n\n  const handleSubmitButton = () => {\n    setErrortext(\"\");\n    if (!userName) {\n      alert(\"Full Name can't be blank\");\n      return;\n    }\n    if (!userEmail) {\n      alert(\"Email can't be blank\");\n      return;\n    }\n    if (!userUserName) {\n      alert(\"Username can't be blank\");\n      return;\n    }\n    if (!userPassword) {\n      alert(\"Password can't be blank\");\n      return;\n    }\n    if (userPassword != userConfirmPassword) {\n      alert(\"Passwords do not match\");\n      return;\n    }\n\n    setLoading(true);\n\n    var jsContents =\n      '{\"username\":\"' +\n      userUserName +\n      '\",\"password\":\"' +\n      Hasher(userPassword) +\n      '\",\"name\":\"' +\n      userName +\n      '\",\"email\":\"' +\n      userEmail +\n      '\"}';\n\n    fetch(baseURL + \"/users/addUser\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: jsContents,\n    })\n      .then((response) => response.json())\n      .then((responseJSON) => {\n        setLoading(false);\n        console.log(responseJSON);\n        if (responseJSON == \"User added!\") {\n          setIsRegistraionSuccess(true);\n          console.log(\"Registration Successful. Please Login to proceed\");\n          alert(\"Success!\");\n          return navigation.navigate(\"Login\");\n        } else {\n          setErrortext(\"Registration Unsuccessful\");\n        }\n      })\n      .catch((error) => {\n        setLoading(false);\n        console.error(error);\n        console.log(\"Failure :(\");\n      });\n    if (isRegistraionSuccess) {\n      console.log(\"It was a success bitches!!\");\n    }\n  };\n\n  return (\n    <LinearGradient\n      colors={[\"#4E576A\", \"#211D1D\", \"black\"]}\n      style={styles.screen}\n    >\n      <LinearGradient colors={[\"#20E9A9\", \"#5762D5\"]} style={styles.container}>\n        <Text\n          style={{\n            height: 90,\n            paddingLeft: 100,\n            paddingTop: 35,\n            fontSize: 40,\n            fontWeight: \"bold\",\n            color: \"#43373F\",\n          }}\n        >\n          Sign Up\n        </Text>\n\n        <View style={styles.signUpContainer}>\n          <TextInput\n            style={styles.inputTextBox}\n            placeholder=\"  Full Name\"\n            onChangeText={(UserName) => setUserName(UserName)}\n            placeholderTextColor=\"#504747\"\n          />\n          <TextInput\n            style={styles.inputTextBox}\n            placeholder=\"  Email Address\"\n            onChangeText={(UserEmail) => setUserEmail(UserEmail)}\n            placeholderTextColor=\"#504747\"\n          />\n          <TextInput\n            style={styles.inputTextBox}\n            placeholder=\"  Username\"\n            onChangeText={(UserUserName) => setUserUserName(UserUserName)}\n            placeholderTextColor=\"#504747\"\n          />\n          <TextInput\n            style={styles.inputTextBox}\n            placeholder=\"  Password\"\n            onChangeText={(UserPassword) => setUserPassword(UserPassword)}\n            secureTextEntry={true}\n            placeholderTextColor=\"#504747\"\n          />\n          <TextInput\n            style={styles.inputTextBox}\n            placeholder=\"  Re-Type Password\"\n            onChangeText={(UserConfirmPassword) =>\n              setUserConfirmPassword(UserConfirmPassword)\n            }\n            secureTextEntry={true}\n            placeholderTextColor=\"#504747\"\n          />\n\n          <CheckBox title=\"Click to accept Terms & Conditions\" />\n\n          <FancyButton text=\"Create\" onPress={handleSubmitButton} />\n\n          <FancyButton\n            text=\"Back to Login\"\n            onPress={() => navigation.goBack()}\n          />\n        </View>\n      </LinearGradient>\n    </LinearGradient>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}