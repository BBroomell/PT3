{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/Users/SBS31/OneDrive/Desktop/PT3/PT3/app/screens/loginScreen.js\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { styles } from \"../styles/styles.js\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport FancyButton from \"../components/fancyButton.js\";\nimport Hasher from \"./helpers/Hasher.js\";\nexport var LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var baseURL = \"https://large-project-2020.herokuapp.com\";\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      userCred = _useState2[0],\n      setUserCred = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userPassword = _useState4[0],\n      setUserPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errortext = _useState8[0],\n      setErrortext = _useState8[1];\n\n  var handleLoginPress = function handleLoginPress() {\n    setErrortext(\"\");\n\n    if (!userCred) {\n      alert(\"Please enter username or email\");\n      return;\n    }\n\n    if (!userPassword) {\n      alert(\"Please enter password\");\n      return;\n    }\n\n    setLoading(true);\n    var js = '{\"username\":\"' + userCred.value + '\",\"password\":\"' + Hasher(userPassword.value) + '\"}';\n    fetch(baseURL + \"users/loginUser\", {\n      method: \"POST\",\n      body: js,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (response) {\n      if (response.statusText == \"OK\" && response.status >= 200 && response.status < 300) {\n        return response.json();\n      } else {\n        throw new Error(\"Server can't be reached!\");\n      }\n    }).then(function (responseJSON) {\n      setLoading(false);\n      console.log(responseJSON);\n      console.log(\"Something Happened\");\n      alert(\"Success!\");\n      return navigation.navigate(\"Main\");\n    }).catch(function (error) {\n      setLoading(false);\n      console.error(error);\n      console.log(\"Failure :(\");\n    });\n  };\n\n  return React.createElement(LinearGradient, {\n    colors: [\"#4E576A\", \"#211D1D\", \"black\"],\n    style: styles.screen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, React.createElement(LinearGradient, {\n    colors: [\"#20E9A9\", \"#5762D5\"],\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.font,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"PT3\"), React.createElement(Text, {\n    style: {\n      fontSize: 25,\n      justifyContent: \"center\",\n      paddingLeft: 45,\n      paddingBottom: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \" \", \"Test, Train and maybe Track\"), React.createElement(View, {\n    style: styles.input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputTextBox,\n    placeholder: \"  Username or Email\",\n    onChangeText: function onChangeText(UserCred) {\n      return setUserCred(UserCred);\n    },\n    placeholderTextColor: \"#504747\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: styles.inputTextBox,\n    placeholder: \"  Password\",\n    onChangeText: function onChangeText(UserPassword) {\n      return setUserPassword(UserPassword);\n    },\n    secureTextEntry: true,\n    placeholderTextColor: \"#504747\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.buttons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, React.createElement(FancyButton, {\n    text: \"Login\",\n    onPress: handleLoginPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }), React.createElement(FancyButton, {\n    text: \"Create Account\",\n    onPress: function onPress() {\n      return navigation.navigate(\"SignUp\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.forgotButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      paddingTop: 90,\n      color: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, \"Forgot Password?\")))), React.createElement(StatusBar, {\n    hidden: false,\n    barStyle: \"dark-content\",\n    backgroundColor: \"#20E9A9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/mnt/c/Users/SBS31/OneDrive/Desktop/PT3/PT3/app/screens/loginScreen.js"],"names":["React","useState","LinearGradient","styles","FancyButton","Hasher","LoginScreen","navigation","baseURL","userCred","setUserCred","userPassword","setUserPassword","loading","setLoading","errortext","setErrortext","handleLoginPress","alert","js","value","fetch","method","body","headers","then","response","statusText","status","json","Error","responseJSON","console","log","navigate","catch","error","screen","container","font","fontSize","justifyContent","paddingLeft","paddingBottom","input","inputTextBox","UserCred","UserPassword","buttons","forgotButton","paddingTop","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Text, View, TextInput, TouchableOpacity } from \"react-native\";\n\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { styles } from \"../styles/styles.js\";\n\nimport { StatusBar } from \"react-native\";\nimport FancyButton from \"../components/fancyButton.js\";\n\nimport Hasher from \"./helpers/Hasher.js\";\n\nexport const LoginScreen = ({ navigation }) => {\n  const baseURL = \"https://large-project-2020.herokuapp.com\";\n\n  let [userCred, setUserCred] = useState(\"\");\n  let [userPassword, setUserPassword] = useState(\"\");\n  let [loading, setLoading] = useState(false);\n  let [errortext, setErrortext] = useState(\"\");\n\n  const handleLoginPress = () => {\n    setErrortext(\"\");\n    if (!userCred) {\n      alert(\"Please enter username or email\");\n      return;\n    }\n    if (!userPassword) {\n      alert(\"Please enter password\");\n      return;\n    }\n    setLoading(true);\n\n    var js =\n      '{\"username\":\"' +\n      userCred.value +\n      '\",\"password\":\"' +\n      Hasher(userPassword.value) +\n      '\"}';\n\n    fetch(baseURL + \"users/loginUser\", {\n      method: \"POST\",\n      body: js,\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => {\n        if (\n          response.statusText == \"OK\" &&\n          response.status >= 200 &&\n          response.status < 300\n        ) {\n          return response.json();\n        } else {\n          throw new Error(\"Server can't be reached!\");\n        }\n      })\n      .then((responseJSON) => {\n        setLoading(false);\n        console.log(responseJSON);\n\n        console.log(\"Something Happened\");\n        alert(\"Success!\");\n        return navigation.navigate(\"Main\");\n      })\n      .catch((error) => {\n        setLoading(false);\n        console.error(error);\n        console.log(\"Failure :(\");\n      });\n  };\n\n  //Script above me^^^^^^\n  //\n  //\n  //\n  return (\n    <LinearGradient\n      colors={[\"#4E576A\", \"#211D1D\", \"black\"]}\n      style={styles.screen}\n    >\n      <LinearGradient colors={[\"#20E9A9\", \"#5762D5\"]} style={styles.container}>\n        <Text style={styles.font}>PT3</Text>\n        <Text\n          style={{\n            fontSize: 25,\n            justifyContent: \"center\",\n            paddingLeft: 45,\n            paddingBottom: 30,\n\n            //position: \"relative\",\n          }}\n        >\n          {\" \"}\n          Test, Train and maybe Track\n        </Text>\n\n        <View style={styles.input}>\n          <TextInput\n            style={styles.inputTextBox}\n            placeholder=\"  Username or Email\"\n            onChangeText={(UserCred) => setUserCred(UserCred)}\n            placeholderTextColor=\"#504747\"\n          />\n          <TextInput\n            style={styles.inputTextBox}\n            placeholder=\"  Password\"\n            onChangeText={(UserPassword) => setUserPassword(UserPassword)}\n            secureTextEntry={true}\n            placeholderTextColor=\"#504747\"\n          />\n        </View>\n\n        <View style={styles.buttons}>\n          <FancyButton text=\"Login\" onPress={handleLoginPress} />\n          <FancyButton\n            text=\"Create Account\"\n            onPress={() => navigation.navigate(\"SignUp\")}\n          />\n        </View>\n\n        <View style={styles.forgotButton}>\n          <TouchableOpacity>\n            <Text style={{ paddingTop: 90, color: \"white\" }}>\n              Forgot Password?\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </LinearGradient>\n      <StatusBar\n        hidden={false}\n        barStyle=\"dark-content\"\n        backgroundColor=\"#20E9A9\"\n      />\n    </LinearGradient>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}